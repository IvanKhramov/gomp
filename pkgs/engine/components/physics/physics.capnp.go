// Code generated by capnpc-go. DO NOT EDIT.

package physics

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type PhysicsState capnp.Struct

// PhysicsState_TypeID is the unique identifier for the type PhysicsState.
const PhysicsState_TypeID = 0xf28c7a9b2464feae

func NewPhysicsState(s *capnp.Segment) (PhysicsState, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PhysicsState(st), err
}

func NewRootPhysicsState(s *capnp.Segment) (PhysicsState, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PhysicsState(st), err
}

func ReadRootPhysicsState(msg *capnp.Message) (PhysicsState, error) {
	root, err := msg.Root()
	return PhysicsState(root.Struct()), err
}

func (s PhysicsState) String() string {
	str, _ := text.Marshal(0xf28c7a9b2464feae, capnp.Struct(s))
	return str
}

func (s PhysicsState) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (PhysicsState) DecodeFromPtr(p capnp.Ptr) PhysicsState {
	return PhysicsState(capnp.Struct{}.DecodeFromPtr(p))
}

func (s PhysicsState) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s PhysicsState) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s PhysicsState) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s PhysicsState) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s PhysicsState) X() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s PhysicsState) SetX(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s PhysicsState) Y() int32 {
	return int32(capnp.Struct(s).Uint32(4))
}

func (s PhysicsState) SetY(v int32) {
	capnp.Struct(s).SetUint32(4, uint32(v))
}

// PhysicsState_List is a list of PhysicsState.
type PhysicsState_List = capnp.StructList[PhysicsState]

// NewPhysicsState creates a new list of PhysicsState.
func NewPhysicsState_List(s *capnp.Segment, sz int32) (PhysicsState_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[PhysicsState](l), err
}

// PhysicsState_Future is a wrapper for a PhysicsState promised by a client call.
type PhysicsState_Future struct{ *capnp.Future }

func (f PhysicsState_Future) Struct() (PhysicsState, error) {
	p, err := f.Future.Ptr()
	return PhysicsState(p.Struct()), err
}

const schema_a61827898c3c5ebe = "x\xda\x12\xa8r`1\xe4\xcdgb`\x0a\x94ae" +
	"\xfb\xbf\xee_\x8a\xca\xec\xaa\x9eO\x0c\x81j\x8c\x8c\xff" +
	"\xf7\xc5\xd9\xf4t\xaaK,c`ag`0\x96e" +
	"\x9c\xc5(l\xca\xc8\xce\xc0 l\xc8X\xce\xe0\xfc\xbf" +
	" ;\xbdX?9?\x97\xb5 ?/5\xaf\xa4X" +
	"\xbf \xa3\xb283\x19N\xeb%'\x16\xe4\x15X\x05" +
	"@x\xc1%\x89\xcc%\xa9\x01\x8c\x8c\x81\x1c\xcc,\x0c" +
	"\x0c,\x8c\x0c\x0c\x82\x9aB\x0c\x0c\x81*\xcc\x8c\x81\x06" +
	"L\x8c\x82\x8c\x8c\"\x8c A]\x90\xa0\x063c\xa0" +
	"\x09\x13#c\x05#\x0b\x03\x13#\x0b\x03#c%\x8c" +
	"\x05\x08\x00\x00\xff\xffP\xf3(L"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_a61827898c3c5ebe,
		Nodes: []uint64{
			0xf28c7a9b2464feae,
		},
		Compressed: true,
	})
}
