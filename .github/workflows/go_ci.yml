name: Go CI

on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string
      os:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ inputs.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ inputs.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Install dependencies
      run: go mod tidy

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libx11-dev \
          libxext-dev \
          libxrender-dev \
          libxrandr-dev \
          libxtst-dev \
          libxt-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          freeglut3-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxxf86vm-dev \
          libxkbcommon-dev \
          libwayland-dev \
          libxi-dev
    - name: Build
      run: go build $(go list ./... | grep -v /internal/ | grep -v /examples/)


  test:
    runs-on: ${{ inputs.os }}
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libx11-dev \
          libxext-dev \
          libxrender-dev \
          libxrandr-dev \
          libxtst-dev \
          libxt-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          freeglut3-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxxf86vm-dev \
          libxkbcommon-dev \
          libwayland-dev \
          libxi-dev
    - name: Set up Go ${{ inputs.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Set up gotestfmt
      uses: GoTestTools/gotestfmt-action@v2

    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.os }}-${{ inputs.go-version }}-build

    - name: Test with Go
      run: go test $(go list ./... | grep -v /internal/ | grep -v /examples/) -race -json -v -coverprofile=coverage.txt ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.os }}-${{ inputs.go-version }}-coverage
        path: coverage.txt

  coverage:
    runs-on: ${{ inputs.os }}
    needs: test
    permissions:
      contents:      read
      actions:       read  # to download code coverage results from "test" job
      pull-requests: write # write permission needed to comment on PR
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ inputs.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.os }}-${{ inputs.go-version }}-coverage

      - uses: fgrosse/go-coverage-report@v1.1.1 # Consider using a Git revision for maximum security
        with:
          coverage-artifact-name: "code-coverage" # can be omitted if you used this default value
          coverage-file-name: "coverage.txt" # can be omitted if you used this default value